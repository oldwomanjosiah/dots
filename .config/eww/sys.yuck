;; Requires common.yuck && ics.yuck to be included

(defpoll sys
  :interval "50ms"
  :initial "{}"
  `./scripts/system get`)

(defvar vol-visible `false`)

(defwidget time [?distance]
  (bubble
    :spacing 8
    :tooltip { sys?.time?.detail }
    :distance { distance }
    (icon :name "clock")
    (label :text { sys?.time?.display })))

(defwidget date [?distance]
  (bubble
    :spacing 8
    :tooltip { sys?.date?.full }
    :distance { distance }
    (icon :name "calendar")
    (label
      :text {
        let
          dt = sys?.date,
          wd = dt?.weekday,
          mon = dt?.shortmonth,
          day = dt?.day
        in
          "${wd} ${mon} ${day}"
        end
      })))

(defwidget volume [?distance]
  (eventbox
    :onhover `${EWW_EXECUTABLE} update vol-visible=true`
    :onhoverlost `${EWW_EXECUTABLE} update vol-visible=false`
  (bubble
    :spacing 0
    :tooltip { (sys?.sound?.mute == true) ? "Mute" : "${sys?.sound?.volume}%" }
    :distance { distance }
    (ic-button
      :onclick `./scripts/system mute-toggle`
      :active-color "primary"
      :name {
        let
          s = sys?.sound,
          mute = s?.mute ?: true,
          vol = s?.volume ?: 0.0
        in
          mute || vol < 10 ? "vol-mute" :
            vol < 35 ? "vol-low" :
              vol < 75 ? "vol-med" :
                "vol-high"
        end
      })
    (revealer
      :reveal { vol-visible == false && (sys?.sound?.mute == false) }
      :duration "1s"
      :transition "slideleft"
      (box
        :style "padding-left: 8px;"
        :width 16
        :height 16
        (circular-progress
          :width 16
          :height 16
          :thickness 2
          :value { sys?.sound?.volume ?: 0 })))
    (revealer
      :reveal { vol-visible == true && (sys?.sound?.mute == false) }
      :duration "1s"
      :transition "slideleft"
      :style "left-padding: 8px;"
      (spacebox
        :spacing 8
        (slider
          :value { sys?.sound?.volume ?: 0 }
          :width 150
          :hover "primary"
          :lighten true
          :onchange `./scripts/system volume set {}`)
        (label
          :text { (sys?.sound?.volume ?: 0.0) + "%" }
          :visible { sys?.sound?.volume != "null" })))
    )))
